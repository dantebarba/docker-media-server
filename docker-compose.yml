version: '3.9'

services:
  jackett:
    image: "linuxserver/jackett:version-v0.20.3521"
    container_name: jackett
    hostname: jackett
    restart: unless-stopped
    volumes:
      - "${STORAGE_LOCATION}/jackett/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    networks:
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jackett.rule=Host(`jackett.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.jackett.tls=true"
      - "traefik.http.routers.jackett.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.jackett.entrypoints=websecure,web"
      - "traefik.http.routers.jackett.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.jackett.loadbalancer.server.port=9117"
      - "group=mediaserver"

  plex:
    image: "plexinc/pms-docker:1.31.1.6733-bc0674160"
    container_name: plex
    restart: unless-stopped
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
    environment:
      - TZ=${DOCKER_TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PUID=${PUID}
      - PGID=${PGID}
    hostname: ${PLEX_HOSTNAME}
    volumes:
      - "${STORAGE_LOCATION}/plex:/config"
      - "${STORAGE_LOCATION}/plex:/transcode"
      - ${MEDIA_LOCATION}:/media:ro
      - /tmp:/tmp
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.plex.tls=true"
      - "traefik.http.routers.plex.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.plex.entrypoints=websecure,web"
      - "traefik.http.routers.plex.middlewares=tls-headers"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
      - "group=mediaserver"
    networks:
      - main


  sonarr:
    image: "linuxserver/sonarr:preview-version-3.0.5.1143"
    container_name: sonarr
    hostname: sonarr
    restart: unless-stopped
    volumes:
     - "/etc/localtime:/etc/localtime:ro"
     - "${STORAGE_LOCATION}/sonarr/config:/config"
     - ${MEDIA_LOCATION}:/media
    environment:
     - PUID=${PUID}
     - PGID=${PGID}
     - VIRTUAL_HOST=sonarr.${BASE_DOMAIN_URL}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.sonarr.tls=true"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.sonarr.entrypoints=websecure,web"
      - "traefik.http.routers.sonarr.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "group=mediaserver"
    networks:
      - main
      
  radarr:
    image: "linuxserver/radarr:4.3.2.6857-ls164"
    container_name: radarr
    hostname: radarr
    restart: unless-stopped
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "${STORAGE_LOCATION}/radarr/config:/config"
      - ${MEDIA_LOCATION}:/media
    environment:
     - PUID=${PUID}
     - PGID=${PGID}
     - VIRTUAL_HOST=radarr.${BASE_DOMAIN_URL}
    networks:
      - main
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.radarr.entrypoints=websecure,web"
      - "traefik.http.routers.radarr.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "group=mediaserver"

  bazarr:
    image: linuxserver/bazarr:1.2.0
    container_name: bazarr
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${DOCKER_TZ}
    restart: unless-stopped
    volumes:
      - ${STORAGE_LOCATION}/bazarr/config:/config
      - ${MEDIA_LOCATION}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.bazarr.tls=true"
      - "traefik.http.routers.bazarr.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.bazarr.entrypoints=websecure,web"
      - "traefik.http.routers.bazarr.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "group=mediaserver"
    networks:
      - main

  nzbhydra2:
    image: ghcr.io/linuxserver/nzbhydra2:4.1.0
    container_name: nzbhydra2
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${DOCKER_TZ}
    volumes:
      - ${STORAGE_LOCATION}/nzbhydra:/config
      - ${MEDIA_LOCATION}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbhydra.rule=Host(`nzbhydra.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.nzbhydra.tls=true"
      - "traefik.http.routers.nzbhydra.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.nzbhydra.entrypoints=websecure,web"
      - "traefik.http.routers.nzbhydra.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.nzbhydra.loadbalancer.server.port=5076"
      - "group=mediaserver"
    networks:
      - main
    restart: unless-stopped

# qbittorrent:
#   image: linuxserver/qbittorrent:14.3.2.99202012272006-7195-abb854a1eubuntu18.04.1-ls107
#   container_name: qbittorrent
#   environment:
#     - PUID=${PUID}
#     - PGID=${PGID}
#     - TZ=${DOCKER_TZ}
#     - WEBUI_PORT=8080
#   volumes:
#     - ${STORAGE_LOCATION}/qbittorrent:/config
#     - ${STORAGE_LOCATION}/qbittorrent/downloads:/downloads
#     - /mnt/watch:/watch
#   labels:
#     - "traefik.enable=true"
#     - "traefik.port=8080"
#     - "traefik.backend=qbt"
#     - "traefik.frontend.entryPoints=http,https"
#     - "traefik.frontend.rule=Host:qbt.${BASE_DOMAIN_URL}"
#     - "traefik.frontend.auth.forward.address=${OAUTH_FORWARD_URL}"
#     - "traefik.frontend.auth.forward.authResponseHeaders=X-Forwarded-User"
#     - "traefik.frontend.auth.forward.trustForwardHeader=true"
#     - "group=mediaserver"
#   networks:
#     - main
#   ports:
#     - 49122:49122
#     - 49122:49122/udp
#   restart: unless-stopped
#   profiles:
#     - downloader
#
  nzbget:
    image: ghcr.io/linuxserver/nzbget:version-v21.1
    container_name: nzbget
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${DOCKER_TZ}
    volumes:
      - ${STORAGE_LOCATION}/nzbget/config:/config
      - ${MEDIA_LOCATION}:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nzbget.rule=Host(`nzbget.${BASE_DOMAIN_URL}`)"
      - "traefik.http.routers.nzbget.tls=true"
      - "traefik.http.routers.nzbget.tls.certresolver=myresolver"
      - "traefik.docker.network=main"
      - "traefik.http.routers.nzbget.entrypoints=websecure,web"
      - "traefik.http.routers.nzbget.middlewares=traefik-forward-auth,tls-headers"
      - "traefik.http.services.nzbget.loadbalancer.server.port=5076"
      - "group=mediaserver"
    networks:
      - main
    restart: unless-stopped
    profiles:
      - downloader


networks:
  main:
    external: true



